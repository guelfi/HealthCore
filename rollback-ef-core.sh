#!/bin/bash

# üîÑ Script de Rollback Entity Framework Core 8.0 ‚Üí 9.0
# Executar este script no WSL em caso de problemas com a migra√ß√£o

echo "üîÑ Rollback Entity Framework Core 8.0 ‚Üí 9.0"
echo "============================================"

# Definir cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Fun√ß√£o para imprimir com cores
print_status() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

print_warning "‚ö†Ô∏è  ATEN√á√ÉO: Este script ir√° reverter as altera√ß√µes da migra√ß√£o!"
print_warning "Voc√™ tem certeza que deseja continuar? (y/n)"
read -r response

if [[ ! "$response" =~ ^[Yy]$ ]]; then
    print_status "Opera√ß√£o cancelada pelo usu√°rio"
    exit 0
fi

# Verificar se estamos no diret√≥rio correto
if [ ! -f "HealthCore.sln" ]; then
    print_error "Arquivo HealthCore.sln n√£o encontrado!"
    print_error "Execute este script a partir do diret√≥rio raiz do projeto HealthCore"
    exit 1
fi

print_status "Iniciando processo de rollback..."

# Passo 1: Restaurar banco de dados se backup existe
print_status "üìÅ Verificando backup do banco de dados..."
if [ -f "src/Api/mobilemed.db.backup" ]; then
    print_status "Restaurando banco de dados do backup..."
    cp "src/Api/mobilemed.db.backup" "src/Api/mobilemed.db"
    print_success "Banco de dados restaurado"
else
    print_warning "Backup do banco n√£o encontrado - pulando restaura√ß√£o"
fi

# Passo 2: Verificar se Git est√° dispon√≠vel para rollback
if command -v git &> /dev/null; then
    print_status "üîÑ Verificando mudan√ßas no Git..."
    
    # Verificar se h√° mudan√ßas no arquivo .csproj
    if git diff --quiet HEAD -- src/Api/HealthCore.Api.csproj; then
        print_warning "Nenhuma mudan√ßa detectada no .csproj - rollback manual necess√°rio"
    else
        print_status "Revertendo mudan√ßas no .csproj..."
        git checkout -- src/Api/HealthCore.Api.csproj
        print_success "Arquivo .csproj revertido"
    fi
else
    print_error "Git n√£o est√° dispon√≠vel - rollback manual necess√°rio"
    print_error "Voc√™ precisar√° restaurar manualmente o arquivo .csproj para as vers√µes:"
    print_error "- Microsoft.EntityFrameworkCore.Design: 9.0.8"
    print_error "- Microsoft.EntityFrameworkCore.Sqlite: 9.0.8"
    print_error "- Microsoft.Extensions.Caching.Memory: 9.0.8"
fi

# Passo 3: Limpar cache e restore packages
print_status "üßπ Limpando cache..."
if command -v dotnet &> /dev/null; then
    dotnet nuget locals all --clear
    
    print_status "üì¶ Restaurando packages originais..."
    dotnet restore src/Api/HealthCore.Api.csproj
    
    if [ $? -eq 0 ]; then
        print_success "Packages restaurados"
    else
        print_error "Falha ao restaurar packages"
    fi
else
    print_warning "dotnet CLI n√£o dispon√≠vel - execute manualmente:"
    print_warning "dotnet nuget locals all --clear"
    print_warning "dotnet restore src/Api/HealthCore.Api.csproj"
fi

# Passo 4: Tentar build
if command -v dotnet &> /dev/null; then
    print_status "üî® Testando build ap√≥s rollback..."
    dotnet build src/Api/HealthCore.Api.csproj
    
    if [ $? -eq 0 ]; then
        print_success "Build realizado com sucesso ap√≥s rollback"
    else
        print_error "Build falhou ap√≥s rollback - verifica√ß√£o manual necess√°ria"
    fi
fi

echo ""
print_success "üéâ Rollback conclu√≠do!"
echo ""
print_status "Status ap√≥s rollback:"
print_status "‚úÖ Banco de dados restaurado (se backup dispon√≠vel)"
print_status "‚úÖ Arquivo .csproj revertido (se Git dispon√≠vel)"
print_status "‚úÖ Cache de packages limpo"
echo ""
print_warning "‚ö†Ô∏è  Verifica√ß√µes recomendadas:"
echo "1. Confirme que o arquivo .csproj est√° com as vers√µes EF Core 9.0"
echo "2. Execute 'dotnet restore' se n√£o foi executado automaticamente"
echo "3. Execute 'dotnet build' para confirmar que tudo est√° funcionando"
echo "4. Teste a aplica√ß√£o manualmente"