#!/bin/bash

# üöÄ ngrok Simple - HealthCore
# Solu√ß√£o para conta gratuita sem comprometer arquitetura de produ√ß√£o

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}üöÄ Configura√ß√£o ngrok para teste externo${NC}"
echo "=========================================="

# Verificar se os servi√ßos est√£o rodando
echo "üîç Verificando servi√ßos..."

if ! curl -s --max-time 3 "http://localhost:5000/health" > /dev/null 2>&1; then
    echo -e "${RED}‚ùå API n√£o est√° rodando na porta 5000${NC}"
    echo "üí° Execute: bash scripts/deployment/servers.sh start"
    exit 1
fi

if ! curl -s --max-time 3 "http://localhost:5005" > /dev/null 2>&1; then
    echo -e "${RED}‚ùå Frontend n√£o est√° rodando na porta 5005${NC}"
    echo "üí° Execute: bash scripts/deployment/servers.sh start"
    exit 1
fi

echo -e "${GREEN}‚úÖ API rodando na porta 5000${NC}"
echo -e "${GREEN}‚úÖ Frontend rodando na porta 5005${NC}"

echo ""
echo -e "${YELLOW}‚ö†Ô∏è  LIMITA√á√ÉO CONTA GRATUITA:${NC}"
echo "O ngrok gratuito permite apenas 1 t√∫nel simult√¢neo."
echo "Para testes externos completos, voc√™ precisa:"
echo ""
echo -e "${BLUE}üìã Op√ß√µes dispon√≠veis:${NC}"
echo "1. Usar apenas localmente (recomendado para desenvolvimento)"
echo "2. Upgrade para ngrok pago (m√∫ltiplos t√∫neis)"
echo "3. Usar alternativas como localtunnel ou serveo"
echo ""

read -p "Deseja continuar com t√∫nel √∫nico para demonstra√ß√£o? (y/n): " -n 1 -r
echo
if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    echo "Opera√ß√£o cancelada."
    exit 0
fi

# Parar ngrok existente
echo ""
echo "üõë Parando ngrok existente..."
pkill -f "ngrok http" 2>/dev/null || true
sleep 2

echo ""
echo -e "${BLUE}Escolha qual servi√ßo expor:${NC}"
echo "1. Frontend (para demonstra√ß√£o visual)"
echo "2. API (para testes de endpoints)"
read -p "Escolha (1 ou 2): " -n 1 -r
echo

if [[ $REPLY == "1" ]]; then
    echo ""
    echo "üåê Iniciando ngrok para Frontend..."
    ngrok http 5005 --log=stdout > ngrok-frontend.log 2>&1 &
    sleep 5
    
    FRONTEND_URL=$(curl -s http://localhost:4040/api/tunnels | python3 -c "
import sys, json
try:
    data = json.load(sys.stdin)
    for tunnel in data['tunnels']:
        if '5005' in str(tunnel['config']['addr']):
            print(tunnel['public_url'])
            break
except:
    pass
" 2>/dev/null)
    
    if [ ! -z "$FRONTEND_URL" ]; then
        echo -e "${GREEN}‚úÖ Frontend ngrok: $FRONTEND_URL${NC}"
        echo ""
        echo -e "${YELLOW}‚ö†Ô∏è  IMPORTANTE:${NC}"
        echo "O frontend funcionar√°, mas requisi√ß√µes √† API falhar√£o"
        echo "porque a API n√£o est√° exposta via ngrok."
        echo ""
        echo -e "${BLUE}üì± Para demonstra√ß√£o visual:${NC}"
        echo -e "Acesse: ${GREEN}$FRONTEND_URL${NC}"
    else
        echo -e "${RED}‚ùå Erro ao obter URL do ngrok${NC}"
        exit 1
    fi
    
elif [[ $REPLY == "2" ]]; then
    echo ""
    echo "üåê Iniciando ngrok para API..."
    ngrok http 5000 --log=stdout > ngrok-api.log 2>&1 &
    sleep 5
    
    API_URL=$(curl -s http://localhost:4040/api/tunnels | python3 -c "
import sys, json
try:
    data = json.load(sys.stdin)
    for tunnel in data['tunnels']:
        if '5000' in str(tunnel['config']['addr']):
            print(tunnel['public_url'])
            break
except:
    pass
" 2>/dev/null)
    
    if [ ! -z "$API_URL" ]; then
        echo -e "${GREEN}‚úÖ API ngrok: $API_URL${NC}"
        echo ""
        echo -e "${BLUE}üîß Para testar endpoints:${NC}"
        echo -e "Swagger: ${GREEN}$API_URL/swagger${NC}"
        echo -e "Health: ${GREEN}$API_URL/health${NC}"
        echo ""
        echo -e "${BLUE}üì± Frontend local permanece:${NC}"
        echo -e "Local: ${GREEN}http://localhost:5005${NC}"
    else
        echo -e "${RED}‚ùå Erro ao obter URL do ngrok${NC}"
        exit 1
    fi
else
    echo "Op√ß√£o inv√°lida."
    exit 1
fi

echo ""
echo -e "${BLUE}üîß Comandos √∫teis:${NC}"
echo "   Parar ngrok: pkill -f 'ngrok http'"
echo "   Ver painel: http://localhost:4040"
echo "   Ver logs: tail -f ngrok-*.log"
echo ""
echo -e "${GREEN}‚úÖ Configura√ß√£o conclu√≠da!${NC}"
